const PHP = require('../../php')
const DB = require('../../database')
const config = require('../../config')

const commonLib = require('../lib/common.lib')
const installFunction = require('./install.function')
const installInc = require('./install.inc')

async function run(req, res, data = {}) {
  let returnData = {}

  let gmnow = PHP.gmdate() + ' GMT'
  res.set('Expires', 0) // rfc2616 - Section 14.21
  res.set('Last-Modified', gmnow)
  res.set('Cache-Control','no-store, no-cache, must-revalidate') // HTTP/1.1
  res.set('Cache-Control','pre-check=0, post-check=0, max-age=0') // HTTP/1.1
  res.set('Pragma','no-cache') // HTTP/1.0
  res.set('Content-Type','text/html; charset=utf-8')
  res.set('X-Robots-Tag','noindex')

  let title = config.G5_VERSION + ' 설치 완료 3/3'
  returnData.data_installInc = installInc({title})

  let mysql_host = installFunction.safe_install_string_check(req.body.mysql_host)
  let mysql_user = installFunction.safe_install_string_check(req.body.mysql_user)
  let mysql_pass = installFunction.safe_install_string_check(req.body.mysql_pass)
  let mysql_db = installFunction.safe_install_string_check(req.body.mysql_db)
  let table_prefix = installFunction.safe_install_string_check(req.body.table_prefix)
  let admin_id = req.body.admin_id
  let admin_pass = req.body.admin_pass
  let admin_name = req.body.admin_name
  let admin_email = req.body.admin_email

  if (/[^0-9a-z_]+/i.test(admin_id)) {
    returnData._status = 'UnsafeAdminID'
    return returnData
  }

  let dblink = DB.create(mysql_host, mysql_user, mysql_pass, mysql_db)
  try {
    await DB.connectionTest(dblink)
  } catch(err) {
    returnData._status = 'MySQLError'
    return returnData
  }
  /*
  let mysql_set_mode = false
  commonLib.sql_set_charset(config.G5_DB_CHARSET, dblink)

  let result = await dblink.raw('select @@sql_mode as mode')
  */

  // 테이블 생성 ------------------------------------
  // 기존 sql파일에서 불러와서 하는 방식에서 스크립트에서 쿼리 실행하는 방식으로 변경
  dblink.transaction(async (trx) => {
    await dblink.schema.dropTableIfExists(table_prefix + 'auth')
    await dblink.schema.createTable(table_prefix + 'auth', (table) => {
      table.string('mb_id', 20).notNullable().defaultTo('')
      table.string('au_menu', 20).notNullable().defaultTo('')
      table.specificType('au_auth', `set('r', 'w', 'd')`).notNullable().defaultTo('') // knex does not have set() type (or mysql function)
      table.primary(['mb_id', 'au_menu'])
      table.engine('MyISAM')
      table.charset('utf8')
    })

    await dblink.schema.dropTableIfExists(table_prefix + 'board')
    await dblink.schema.createTable(table_prefix + 'board', (table) => {
      table.string('bo_table', 20).notNullable().defaultTo('').primary()
      table.string('gr_id', 255).notNullable().defaultTo('')
      table.string('bo_subject', 255).notNullable().defaultTo('')
      table.string('bo_mobile_subject', 255).notNullable().defaultTo('')
      table.enu('bo_device', ['both', 'pc', 'mobile']).notNullable().defaultTo('both')
      table.string('bo_admin', 255).notNullable().defaultTo('')
      table.specificType('bo_list_level', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_read_level', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_write_level', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_reply_level', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_comment_level', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_upload_level', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_download_level', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_html_level', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_link_level', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_count_delete', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_count_modify', 'tinyint(4)').notNullable().defaultTo(0)
      table.integer('bo_read_point').notNullable().defaultTo(0)
      table.integer('bo_write_point').notNullable().defaultTo(0)
      table.integer('bo_comment_point').notNullable().defaultTo(0)
      table.integer('bo_download_point').notNullable().defaultTo(0)
      table.specificType('bo_use_category', 'tinyint(4)').notNullable().defaultTo(0)
      table.text('bo_category_list').notNullable()
      table.specificType('bo_use_sideview', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_file_content', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_secret', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_dhtml_editor', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_rss_view', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_good', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_nogood', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_name', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_signature', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_ip_view', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_list_view', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_list_file', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_list_content', 'tinyint(4)').notNullable().defaultTo(0)
      table.integer('bo_table_width').notNullable().defaultTo(0)
      table.integer('bo_subject_len').notNullable().defaultTo(0)
      table.integer('bo_mobile_subject_len').notNullable().defaultTo(0)
      table.integer('bo_page_rows').notNullable().defaultTo(0)
      table.integer('bo_mobile_page_rows').notNullable().defaultTo(0)
      table.integer('bo_new').notNullable().defaultTo(0)
      table.integer('bo_hot').notNullable().defaultTo(0)
      table.integer('bo_image_width').notNullable().defaultTo(0)
      table.string('bo_skin', 255).notNullable().defaultTo('')
      table.string('bo_mobile_skin', 255).notNullable().defaultTo('')
      table.string('bo_include_head', 255).notNullable().defaultTo('')
      table.string('bo_include_tail', 255).notNullable().defaultTo('')
      table.text('bo_content_head').notNullable()
      table.text('bo_mobile_content_head').notNullable()
      table.text('bo_content_tail').notNullable()
      table.text('bo_mobile_content_tail').notNullable()
      table.text('bo_insert_content').notNullable()
      table.integer('bo_gallery_cols').notNullable().defaultTo(0)
      table.integer('bo_gallery_width').notNullable().defaultTo(0)
      table.integer('bo_gallery_height').notNullable().defaultTo(0)
      table.integer('bo_mobile_gallery_width').notNullable().defaultTo(0)
      table.integer('bo_mobile_gallery_height').notNullable().defaultTo(0)
      table.integer('bo_upload_size').notNullable().defaultTo(0)
      table.specificType('bo_reply_order', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_search', 'tinyint(4)').notNullable().defaultTo(0)
      table.integer('bo_order').notNullable().defaultTo(0)
      table.integer('bo_count_write').notNullable().defaultTo(0)
      table.integer('bo_count_comment').notNullable().defaultTo(0)
      table.integer('bo_write_min').notNullable().defaultTo(0)
      table.integer('bo_write_max').notNullable().defaultTo(0)
      table.integer('bo_comment_min').notNullable().defaultTo(0)
      table.integer('bo_comment_max').notNullable().defaultTo(0)
      table.text('bo_notice').notNullable()
      table.specificType('bo_upload_count', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_email', 'tinyint(4)').notNullable().defaultTo(0)
      table.enu('bo_use_cert', ['', 'cert', 'adult', 'hp-cert', 'hp-adult']).notNullable().defaultTo('')
      table.specificType('bo_use_sns', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('bo_use_captcha', 'tinyint(4)').notNullable().defaultTo(0)
      table.string('bo_soft_field', 255).notNullable().defaultTo('')
      table.string('bo_1_subj', 255).notNullable().defaultTo('')
      table.string('bo_2_subj', 255).notNullable().defaultTo('')
      table.string('bo_3_subj', 255).notNullable().defaultTo('')
      table.string('bo_4_subj', 255).notNullable().defaultTo('')
      table.string('bo_5_subj', 255).notNullable().defaultTo('')
      table.string('bo_6_subj', 255).notNullable().defaultTo('')
      table.string('bo_7_subj', 255).notNullable().defaultTo('')
      table.string('bo_8_subj', 255).notNullable().defaultTo('')
      table.string('bo_9_subj', 255).notNullable().defaultTo('')
      table.string('bo_10_subj', 255).notNullable().defaultTo('')
      table.string('bo_1', 255).notNullable().defaultTo('')
      table.string('bo_2', 255).notNullable().defaultTo('')
      table.string('bo_3', 255).notNullable().defaultTo('')
      table.string('bo_4', 255).notNullable().defaultTo('')
      table.string('bo_5', 255).notNullable().defaultTo('')
      table.string('bo_6', 255).notNullable().defaultTo('')
      table.string('bo_7', 255).notNullable().defaultTo('')
      table.string('bo_8', 255).notNullable().defaultTo('')
      table.string('bo_9', 255).notNullable().defaultTo('')
      table.string('bo_10', 255).notNullable().defaultTo('')

      table.engine('MyISAM')
      table.charset('utf8')
    })

    await dblink.schema.dropTableIfExists(table_prefix + 'board_file')
    await dblink.schema.createTable(table_prefix + 'board_file', (table) => {
      table.string('bo_table', 20).notNullable().defaultTo('')
      table.integer('wr_id').notNullable().defaultTo(0)
      table.integer('bf_no').notNullable().defaultTo(0)
      table.string('bf_source', 255).notNullable().defaultTo('')
      table.string('bf_file', 255).notNullable().defaultTo('')
      table.integer('bf_download').notNullable()
      table.text('bf_content').notNullable()
      table.string('bf_fileurl', 255).notNullable().defaultTo('')
      table.string('bf_thumburl', 255).notNullable().defaultTo('')
      table.string('bf_storage', 50).notNullable().defaultTo('')
      table.integer('bf_filesize').notNullable().defaultTo(0)
      table.integer('bf_width').notNullable().defaultTo(0)
      table.specificType('bf_height', 'smallint(6)').notNullable().defaultTo(0)
      table.specificType('bf_type', 'tinyint(4)').notNullable().defaultTo(0)
      table.datetime('bf_datetime').notNullable().defaultTo('0000-00-00 00:00:00')

      table.primary(['bo_table', 'wr_id', 'bf_no'])
      table.engine('MyISAM')
      table.charset('utf8')
    })

    await dblink.schema.dropTableIfExists(table_prefix + 'board_good')
    await dblink.schema.createTable(table_prefix + 'board_good', (table) => {
      table.increments('bg_id').notNullable().primary()
      table.string('bo_table', 20).notNullable().defaultTo('')
      table.integer('wr_id').notNullable().defaultTo(0)
      table.string('mb_id', 20).notNullable().defaultTo('')
      table.string('bg_flag', 255).notNullable().defaultTo('')
      table.datetime('bg_datetime').notNullable().defaultTo('0000-00-00 00:00:00')

      table.unique(['bo_table', 'wr_id', 'mb_id'], 'fkey1')
      table.engine('MyISAM')
      table.charset('utf8')
    })

    await dblink.schema.dropTableIfExists(table_prefix + 'board_new')
    await dblink.schema.createTable(table_prefix + 'board_new', (table) => {
      table.increments('bn_id').notNullable().primary()
      table.string('bo_table', 20).notNullable().defaultTo('')
      table.integer('wr_id').notNullable().defaultTo(0)
      table.integer('wr_parent').notNullable().defaultTo(0)
      table.datetime('bn_datetime').notNullable().defaultTo('0000-00-00 00:00:00')
      table.string('mb_id', 20).notNullable().defaultTo('')

      table.index('mb_id', 'mb_id')
      table.engine('MyISAM')
      table.charset('utf8')
    })

    await dblink.schema.dropTableIfExists(table_prefix + 'config')
    await dblink.schema.createTable(table_prefix + 'config', (table) => {
      table.string('cf_title', 255).notNullable().defaultTo('')
      table.string('cf_theme', 100).notNullable().defaultTo('')
      table.string('cf_admin', 100).notNullable().defaultTo('')
      table.string('cf_admin_email', 100).notNullable().defaultTo('')
      table.string('cf_admin_email_name', 100).notNullable().defaultTo('')
      table.text('cf_add_script').notNullable()
      table.specificType('cf_use_point', 'tinyint(4)').notNullable().defaultTo(0)
      table.integer('cf_point_term').notNullable().defaultTo(0)
      table.specificType('cf_use_copy_log', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_use_email_certify', 'tinyint(4)').notNullable().defaultTo(0)
      table.integer('cf_login_point').notNullable().defaultTo(0)
      table.specificType('cf_cut_name', 'tinyint(4)').notNullable().defaultTo(0)
      table.integer('cf_nick_modify').notNullable().defaultTo(0)
      table.string('cf_new_skin', 50).notNullable().defaultTo('')
      table.integer('cf_new_rows').notNullable().defaultTo(0)
      table.string('cf_search_skin', 50).notNullable().defaultTo('')
      table.string('cf_connect_skin', 50).notNullable().defaultTo('')
      table.string('cf_faq_skin', 50).notNullable().defaultTo('')
      table.integer('cf_read_point').notNullable().defaultTo(0)
      table.integer('cf_write_point').notNullable().defaultTo(0)
      table.integer('cf_comment_point').notNullable().defaultTo(0)
      table.integer('cf_download_point').notNullable().defaultTo(0)
      table.integer('cf_write_pages').notNullable().defaultTo(0)
      table.integer('cf_mobile_pages').notNullable().defaultTo(0)
      table.string('cf_link_target', 50).notNullable().defaultTo('')
      table.specificType('cf_bbs_rewrite','tinyint(4)').notNullable().defaultTo(0)
      table.integer('cf_delay_sec').notNullable().defaultTo(0)
      table.text('cf_filter').notNullable()
      table.text('cf_possible_ip').notNullable()
      table.text('cf_intercept_ip').notNullable()
      table.text('cf_analytics').notNullable()
      table.text('cf_add_meta').notNullable()
      table.string('cf_member_skin', 50).notNullable().defaultTo('')
      table.specificType('cf_use_homepage', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_req_homepage', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_use_tel', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_req_tel', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_use_hp', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_req_hp', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_use_addr', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_req_addr', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_use_signature', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_req_signature', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_use_profile', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_req_profile', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_register_level', 'tinyint(4)').notNullable().defaultTo(0)
      table.integer('cf_register_point').notNullable().defaultTo(0)
      table.specificType('cf_icon_level', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_use_recommend', 'tinyint(4)').notNullable().defaultTo(0)
      table.integer('cf_recommend_point').notNullable().defaultTo(0)
      table.integer('cf_leave_day').notNullable().defaultTo(0)
      table.integer('cg_search_part').notNullable().defaultTo(0)
      table.specificType('cf_email_use', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_email_wr_super_admin', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_email_wr_group_admin', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_email_wr_board_admin', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_email_wr_write', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_email_wr_comment_all', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_email_mb_super_admin', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_email_mb_member', 'tinyint(4)').notNullable().defaultTo(0)
      table.specificType('cf_email_po_super_admin', 'tinyint(4)').notNullable().defaultTo(0)
      table.text('cf_prohibit_id').notNullable()
      table.text('cf_prohibit_email').notNullable()
      table.integer('cf_new_del').notNullable().defaultTo(0)
      table.integer('cf_memo_del').notNullable().defaultTo(0)
      table.integer('cf_visit_del').notNullable().defaultTo(0)
      table.integer('cf_popular_del').notNullable().defaultTo(0)
      table.date('cf_optimize_date').notNullable().defaultTo('0000-00-00')
      table.specificType('cf_use_member_icon', 'tinyint(4)').notNullable().defaultTo(0)
      table.integer('cf_member_icon_size').notNullable().defaultTo(0)
      table.integer('cf_member_icon_width').notNullable().defaultTo(0)
      table.integer('cf_member_icon_height').notNullable().defaultTo(0)
      table.integer('cf_member_img_size').notNullable().defaultTo(0)
      table.integer('cf_member_img_width').notNullable().defaultTo(0)
      table.integer('cf_member_img_height').notNullable().defaultTo(0)
      table.integer('cf_login_minutes').notNullable().defaultTo(0)
      table.string('cf_image_extension', 255).notNullable().defaultTo('')
      table.string('cf_flash_extension', 255).notNullable().defaultTo('')
      table.string('cf_movie_extension', 255).notNullable().defaultTo('')
      table.specificType('cf_formmail_is_member', 'tinyint(4)').notNullable().defaultTo(0)
      table.integer('cf_page_rows').notNullable().defaultTo(0)
      table.integer('cf_mobile_page_rows').notNullable().defaultTo(0)
      table.string('cf_visit', 255).notNullable().defaultTo('')
      table.integer('cf_max_po_id').notNullable().defaultTo(0)
      table.text('cf_stipulation').notNullable()
      table.text('cf_privacy').notNullable()
      table.integer('cf_open_modify').notNullable().defaultTo(0)
      table.integer('cf_memo_send_point').notNullable().defaultTo(0)
      table.string('cf_mobile_new_skin', 50).notNullable().defaultTo('')
      table.string('cf_mobile_search_skin', 50).notNullable().defaultTo('')
      table.string('cf_mobile_connect_skin', 50).notNullable().defaultTo('')
      table.string('cf_mobile_faq_skin', 50).notNullable().defaultTo('')
      table.string('cf_mobile_member_skin', 50).notNullable().defaultTo('')
      table.string('cf_captcha_mp3', 255).notNullable().defaultTo('')
      table.string('cf_editor', 50).notNullable().defaultTo('')
      table.specificType('cf_cert_use', 'tinyint(4)').notNullable().defaultTo(0)
      table.string('cf_cert_ipin', 255).notNullable().defaultTo('')
      table.string('cf_cert_hp', 255).notNullable().defaultTo('')
      table.string('cf_cert_kcb_cd', 255).notNullable().defaultTo('')
      table.string('cf_cert_kcp_cd', 255).notNullable().defaultTo('')
      table.string('cf_lg_mid', 100).notNullable().defaultTo('')
      table.string('cf_lg_mert_key', 100).notNullable().defaultTo('')
      table.integer('cf_cert_limit').notNullable().defaultTo(0)
      table.specificType('cf_cert_req', 'tinyint(4)').notNullable().defaultTo(0)
      table.string('cf_sms_use', 255).notNullable().defaultTo('')
      table.string('cf_sms_type', 10).notNullable().defaultTo('')
      table.string('cf_icode_id', 255).notNullable().defaultTo('')
      table.string('cf_icode_pw', 255).notNullable().defaultTo('')
      table.string('cf_icode_server_ip', 50).notNullable().defaultTo('')
      table.string('cf_icode_server_port', 50).notNullable().defaultTo('')
      table.string('cf_googl_shorturl_apikey', 50).notNullable().defaultTo('')
      table.specificType('cf_social_login_use', 'tinyint(4)').notNullable().defaultTo(0)
      table.string('cf_social_servicelist', 255).notNullable().defaultTo('')
      table.string('cf_payco_clientid', 100).notNullable().defaultTo('')
      table.string('cf_payco_secret', 100).notNullable().defaultTo('')
      table.string('cf_facebook_appid', 100).notNullable()
      table.string('cf_facebook_secret', 100).notNullable()
      table.string('cf_twitter_key', 100).notNullable()
      table.string('cf_twitter_secret', 100).notNullable()
      table.string('cf_google_clientid', 100).notNullable().defaultTo('')
      table.string('cf_google_secret', 100).notNullable().defaultTo('')
      table.string('cf_naver_clientid', 100).notNullable().defaultTo('')
      table.string('cf_naver_secret', 100).notNullable().defaultTo('')
      table.string('cf_kakao_rest_key', 100).notNullable().defaultTo('')
      table.string('cf_kakao_client_secret', 100).notNullable().defaultTo('')
      table.string('cf_kakao_js_apikey', 100).notNullable().defaultTo('')
      table.string('cf_captcha', 100).notNullable().defaultTo('')
      table.string('cf_recaptcha_site_key', 100).notNullable().defaultTo('')
      table.string('cf_recaptcha_secret_key', 100).notNullable().defaultTo('')
      table.string('cf_1_subj', 255).notNullable().defaultTo('')
      table.string('cf_2_subj', 255).notNullable().defaultTo('')
      table.string('cf_3_subj', 255).notNullable().defaultTo('')
      table.string('cf_4_subj', 255).notNullable().defaultTo('')
      table.string('cf_5_subj', 255).notNullable().defaultTo('')
      table.string('cf_6_subj', 255).notNullable().defaultTo('')
      table.string('cf_7_subj', 255).notNullable().defaultTo('')
      table.string('cf_8_subj', 255).notNullable().defaultTo('')
      table.string('cf_9_subj', 255).notNullable().defaultTo('')
      table.string('cf_10_subj', 255).notNullable().defaultTo('')
      table.string('cf_1', 255).notNullable().defaultTo('')
      table.string('cf_2', 255).notNullable().defaultTo('')
      table.string('cf_3', 255).notNullable().defaultTo('')
      table.string('cf_4', 255).notNullable().defaultTo('')
      table.string('cf_5', 255).notNullable().defaultTo('')
      table.string('cf_6', 255).notNullable().defaultTo('')
      table.string('cf_7', 255).notNullable().defaultTo('')
      table.string('cf_8', 255).notNullable().defaultTo('')
      table.string('cf_9', 255).notNullable().defaultTo('')
      table.string('cf_10', 255).notNullable().defaultTo('')

      table.engine('MyISAM')
      table.charset('utf8')
    })

    await dblink.schema.dropTableIfExists(table_prefix + 'cert_history')
    await dblink.schema.createTable(table_prefix + 'cert_history', (table) => {
      table.increments('cr_id').notNullable()
      table.string('mb_id', 20).notNullable().defaultTo('')
      table.string('cr_company', 255).notNullable().defaultTo('')
      table.string('cr_method', 255).notNullable().defaultTo('')
      table.string('cr_ip', 255).notNullable().defaultTo('')
    })

    await trx.commit()
    // TODO catch() => show error message
  })

  returnData._status = 'OK'
  return returnData
}

module.exports = run
